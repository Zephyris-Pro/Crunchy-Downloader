name: Nightly Build

on:
  schedule:
    # cronjob that triggers every day at 1PM UTC
    - cron: "0 13 * * *"
  workflow_dispatch:

concurrency:
  group: nightly
  cancel-in-progress: true

jobs:
  build_nightly:
    runs-on: windows-latest
    outputs:
      full_sha: ${{ steps.var.outputs.full_sha }}
      short_sha: ${{ steps.var.outputs.short_sha }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore NuGet packages
        run: dotnet restore CRD.sln

      - name: Publish CRD project as single .exe
        run: dotnet publish CRD/CRD.csproj -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeAllContentForSelfExtract=true --output ./publish

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: CRD-win-x64
          path: |
            ./publish/CRD.exe
            ./publish/CRD.pdb

      - name: Generate build info
        id: var
        run: |
          echo "full_sha=$(git rev-parse HEAD)" >> $env:GITHUB_OUTPUT
          echo "short_sha=$(git rev-parse --short HEAD)" >> $env:GITHUB_OUTPUT

  recreate_release:
    name: Recreate Release
    runs-on: ubuntu-latest
    needs: build_nightly
    steps:
      - uses: actions/checkout@v4

      - name: Delete existing release
        id: delete_release
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const tag = "nightly";

            const releases = await github.rest.repos.listReleases({owner: owner, repo: repo,});
            const release = releases.data.find(release => release.tag_name === tag);

            if (release) {
              await github.rest.repos.deleteRelease({owner: owner, repo: repo, release_id: release.id,});
              console.log(`Deleted release with ID ${release.id}`);
            } else {
              console.log("No existing release found");
            }

            try {
              await github.rest.git.deleteRef({owner: owner, repo: repo, ref: `tags/${tag}`,});
              console.log(`Deleted tag ${tag}`);
            } catch {
              console.log(`No tag ${tag} to delete`);
            }

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: CRD-win-x64
          path: ./release_files

      - name: Calculate SHA256 checksum
        id: build_sha
        run: |
          hash=$(sha256sum ./release_files/CRD.exe | awk '{ print $1 }')
          echo "$hash" > ./release_files/sha256.checksum
          echo "build_sha=$hash" >> $GITHUB_OUTPUT
          cat ./release_files/sha256.checksum

      - name: Create or update nightly release
        uses: softprops/action-gh-release@v2.2.2
        with:
          tag_name: nightly
          name: Nightly [${{ needs.build_nightly.outputs.short_sha }}]
          body: |
            **This nightly build was generated automatically by GitHub Actions.**
            [URL to build](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            `CRD.exe` SHA256 checksum:
            ```
            ${{ steps.build_sha.outputs.build_sha }}
            ```

            You can download the attached artifacts to test the latest build.
            Build artifacts **ARE NOT** guaranteed to be **IDENTICAL** to release assets, as release assets can be modified after they are uploaded.

            Full Commit Hash:
            ```
            ${{ needs.build_nightly.outputs.full_sha }}
            ```

          files: |
            ./release_files/CRD.exe
            ./release_files/CRD.pdb
